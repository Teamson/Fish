{"version":3,"sources":["assets\\ExportLibs\\AutoScroll.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class AutoScroll extends cc.Component {\r\n\r\n    @property\r\n    scrollSpeed: number = 2\r\n    @property\r\n    isVertical: boolean = true\r\n\r\n    scroll: cc.ScrollView = null\r\n\r\n    isReady: boolean = false\r\n    isDown: boolean = true\r\n\r\n    onLoad() {\r\n        this.scroll = this.node.getComponent(cc.ScrollView)\r\n    }\r\n\r\n    start() {\r\n        this.scheduleOnce(() => { this.isReady = true }, 1)\r\n    }\r\n\r\n    onEnable() {\r\n        this.scheduleOnce(() => { this.isReady = true }, 1)\r\n    }\r\n\r\n    onDisable() {\r\n        this.isReady = false\r\n    }\r\n\r\n    update(dt) {\r\n        if (!this.isReady || this.scroll.isScrolling()) return\r\n\r\n        let curV = this.isVertical ? this.scroll.getScrollOffset().y : -this.scroll.getScrollOffset().x\r\n        let maxV = this.isVertical ? this.scroll.getMaxScrollOffset().y : this.scroll.getMaxScrollOffset().x\r\n        if (this.isDown) {\r\n            if (curV < maxV) {\r\n                curV += 2\r\n                if (this.isVertical) {\r\n                    this.scroll.scrollToOffset(cc.v2(0, curV))\r\n                } else {\r\n                    this.scroll.scrollToOffset(cc.v2(curV, 0))\r\n                }\r\n            } else {\r\n                this.isDown = false\r\n                this.isReady = false\r\n                this.scheduleOnce(() => { this.isReady = true }, 1)\r\n            }\r\n        } else {\r\n            if (curV > 0) {\r\n                curV -= 2\r\n                if (this.isVertical) {\r\n                    this.scroll.scrollToOffset(cc.v2(0, curV))\r\n                } else {\r\n                    this.scroll.scrollToOffset(cc.v2(curV, 0))\r\n                }\r\n            } else {\r\n                this.isDown = true\r\n                this.isReady = false\r\n                this.scheduleOnce(() => { this.isReady = true }, 1)\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n"]}