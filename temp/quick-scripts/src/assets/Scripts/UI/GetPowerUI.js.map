{"version":3,"sources":["assets\\Scripts\\UI\\GetPowerUI.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,uDAAkD;AAClD,sCAAiC;AACjC,4CAAuC;AACvC,0CAAqC;AAE/B,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAA0B,CAAC;AAG5C;IAAwC,8BAAY;IADpD;QAAA,qEAmCC;QA/BG,cAAQ,GAAY,IAAI,CAAA;;QA8BxB,iBAAiB;IACrB,CAAC;IA7BG,eAAe;IAEf,0BAAK,GAAL;IAEA,CAAC;IAED,6BAAQ,GAAR;QACI,eAAK,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAA;QAC3B,eAAK,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAA;QAC3B,iBAAO,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,GAAG,CAAC,CAAA;IAChD,CAAC;IAED,8BAAS,GAAT;QACI,eAAK,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAA;IAC/B,CAAC;IAED,kCAAa,GAAb;QAAA,iBAMC;QALG,IAAI,EAAE,GAAG;YACL,uBAAa,CAAC,WAAW,CAAC,CAAC,CAAC,CAAA;YAC5B,KAAI,CAAC,eAAe,EAAE,CAAA;QAC1B,CAAC,CAAA;QACD,kBAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,CAAC,CAAA;IACnC,CAAC;IAED,oCAAe,GAAf;QAAA,iBAEC;QADG,iBAAO,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,GAAG,EAAE,cAAQ,KAAI,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAA,CAAC,CAAC,CAAC,CAAA;IACrF,CAAC;IA5BD;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;gDACM;IAHP,UAAU;QAD9B,OAAO;OACa,UAAU,CAkC9B;IAAD,iBAAC;CAlCD,AAkCC,CAlCuC,EAAE,CAAC,SAAS,GAkCnD;kBAlCoB,UAAU","file":"","sourceRoot":"/","sourcesContent":["import PlayerDataMgr from \"../Libs/PlayerDataMgr\";\r\nimport AdMgr from \"../Mod/AdMgr\";\r\nimport ShareMgr from \"../Mod/ShareMgr\";\r\nimport Utility from \"../Mod/Utility\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class GetPowerUI extends cc.Component {\r\n\r\n    @property(cc.Node)\r\n    rootNode: cc.Node = null\r\n\r\n    // onLoad () {}\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    onEnable() {\r\n        AdMgr.instance.hideBanner()\r\n        AdMgr.instance.showBanner()\r\n        Utility.rootAction(this.rootNode, true, 0.1)\r\n    }\r\n\r\n    onDisable() {\r\n        AdMgr.instance.hideBanner()\r\n    }\r\n\r\n    getPowerBtnCB() {\r\n        let cb = () => {\r\n            PlayerDataMgr.changePower(3)\r\n            this.closeGetPowerUI()\r\n        }\r\n        ShareMgr.instance.shareGame(cb)\r\n    }\r\n\r\n    closeGetPowerUI() {\r\n        Utility.rootAction(this.rootNode, false, 0.1, () => { this.node.active = false })\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n"]}