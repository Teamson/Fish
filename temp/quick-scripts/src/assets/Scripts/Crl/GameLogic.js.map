{"version":3,"sources":["assets\\Scripts\\Crl\\GameLogic.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,uDAAkD;AAE5C,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAA0B,CAAC;AAG5C;IAAuC,6BAAY;IADnD;QAAA,qEAuCC;QAlCG,eAAS,GAAY,IAAI,CAAA;QAEzB,cAAQ,GAAY,IAAI,CAAA;QAExB,cAAQ,GAAY,IAAI,CAAA;;QA6BxB,iBAAiB;IACrB,CAAC;kBAtCoB,SAAS;IAU1B,0BAAM,GAAN;QACI,WAAS,CAAC,KAAK,GAAG,IAAI,CAAA;QACtB,IAAI,CAAC,YAAY,EAAE,CAAA;IACvB,CAAC;IAED,yBAAK,GAAL;IAEA,CAAC;IAED,gCAAY,GAAZ;QACI,mHAAmH;QACnH,oBAAoB;QACpB,yCAAyC;QACzC,qCAAqC;QACrC,QAAQ;QACR,KAAK;QACL,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,uBAAa,CAAC,aAAa,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,IAAI,CAAA;IAClF,CAAC;IAED,gCAAY,GAAZ;QACI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAA;IAC/B,CAAC;IAED,gCAAY,GAAZ;QACI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAA;IAC/B,CAAC;;IA/BD;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;gDACO;IAEzB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;+CACM;IAExB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;+CACM;IARP,SAAS;QAD7B,OAAO;OACa,SAAS,CAsC7B;IAAD,gBAAC;CAtCD,AAsCC,CAtCsC,EAAE,CAAC,SAAS,GAsClD;kBAtCoB,SAAS","file":"","sourceRoot":"/","sourcesContent":["import PlayerDataMgr from \"../Libs/PlayerDataMgr\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class GameLogic extends cc.Component {\r\n    public static Share: GameLogic\r\n\r\n    @property(cc.Node)\r\n    LevelNode: cc.Node = null\r\n    @property(cc.Node)\r\n    FinishUI: cc.Node = null\r\n    @property(cc.Node)\r\n    DefeatUI: cc.Node = null\r\n\r\n    onLoad() {\r\n        GameLogic.Share = this\r\n        this.addLevelNode()\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    addLevelNode() {\r\n        // cc.loader.loadRes('Prefabs/LevelNode/Level' + PlayerDataMgr.getPlayerData().grade, cc.Prefab, (err, prefab) => {\r\n        //     if (prefab) {\r\n        //         let p = cc.instantiate(prefab)\r\n        //         this.LevelNode.addChild(p)\r\n        //     }\r\n        // })\r\n        this.LevelNode.children[PlayerDataMgr.getPlayerData().grade - 1].active = true\r\n    }\r\n\r\n    showFinishUI() {\r\n        this.FinishUI.active = true\r\n    }\r\n\r\n    showDefeatUI() {\r\n        this.DefeatUI.active = true\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n"]}