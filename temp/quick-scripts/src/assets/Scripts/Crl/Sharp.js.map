{"version":3,"sources":["assets\\Scripts\\Crl\\Sharp.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import Utility from \"../Mod/Utility\";\r\nimport Level1 from \"./Level/Level1\";\r\nimport LevelBase from \"./Level/LevelBase\";\r\nimport SharpAni from \"./SharpAni\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Sharp extends cc.Component {\r\n\r\n    pointNode: cc.Node = null\r\n\r\n    moveSpeed: number = 1\r\n\r\n    isMoving: boolean = false\r\n    @property\r\n    pointIndex: number = 0\r\n\r\n    aniCrl: SharpAni = null\r\n\r\n    onLoad() {\r\n        this.pointNode = LevelBase.Share.node.getChildByName('PointNode')\r\n        this.aniCrl = this.node.children[0].getComponent(SharpAni)\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    moveToPoint(index: number) {\r\n        return new Promise((rs, rj) => {\r\n            if (this.isMoving) {\r\n                rs()\r\n                return\r\n            }\r\n            this.aniCrl.playAnimationByName(1)\r\n            this.isMoving = true\r\n            let desPos = this.pointNode.children[index].getPosition()\r\n            this.node.scaleX = Math.abs(this.node.scaleX) * (desPos.x < this.node.x ? 1 : -1)\r\n            let dis = Utility.getWorldDis(this.pointNode.children[index], this.node)\r\n            let a1 = cc.moveTo(dis / 300/* this.moveSpeed */, desPos)\r\n            let a2 = cc.callFunc(() => {\r\n                this.pointIndex = index\r\n                this.isMoving = false\r\n                this.aniCrl.playAnimationByName(0)\r\n                rs()\r\n            })\r\n            let a3 = cc.sequence(a1, a2)\r\n            this.node.runAction(a3)\r\n        })\r\n    }\r\n\r\n    checkEatPlayer() {\r\n        if (!LevelBase.Share.isGameOver) {\r\n            if (Utility.getWorldDis(this.node, LevelBase.Share.playerNode) <= 50) {\r\n                this.aniCrl.playAnimationByName(3)\r\n                LevelBase.Share.loseCB()\r\n            }\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        this.checkEatPlayer()\r\n    }\r\n}\r\n"]}