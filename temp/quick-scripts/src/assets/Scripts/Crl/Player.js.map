{"version":3,"sources":["assets\\Scripts\\Crl\\Player.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACA,+CAA0C;AAEpC,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAA0B,CAAC;AAG5C;IAAoC,0BAAY;IADhD;QAAA,qEA2CC;QAxCG,eAAS,GAAY,IAAI,CAAA;QAEzB,aAAO,GAAY,KAAK,CAAA;QAExB,cAAQ,GAAY,KAAK,CAAA;QACzB,eAAS,GAAW,CAAC,CAAA;QACrB,gBAAU,GAAW,CAAC,CAAA;;QAiCtB,iBAAiB;IACrB,CAAC;IAhCG,uBAAM,GAAN;QACI,IAAI,CAAC,SAAS,GAAG,mBAAS,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,CAAA;IACrE,CAAC;IAED,sBAAK,GAAL;IAEA,CAAC;IAED,MAAM;IACN,wBAAO,GAAP;QACI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAA;IACvB,CAAC;IAED,4BAAW,GAAX,UAAY,KAAa;QAAzB,iBAgBC;QAfG,OAAO,IAAI,OAAO,CAAC,UAAC,EAAE,EAAE,EAAE;YACtB,IAAI,KAAI,CAAC,QAAQ,EAAE;gBACf,EAAE,EAAE,CAAA;gBACJ,OAAM;aACT;YACD,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAA;YACpB,IAAI,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,KAAI,CAAC,SAAS,EAAE,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC,CAAA;YAChF,IAAI,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC;gBACjB,KAAI,CAAC,UAAU,GAAG,KAAK,CAAA;gBACvB,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAA;gBACrB,EAAE,EAAE,CAAA;YACR,CAAC,CAAC,CAAA;YACF,IAAI,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,CAAA;YAC5B,KAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAA;QAC3B,CAAC,CAAC,CAAA;IACN,CAAC;IAvCgB,MAAM;QAD1B,OAAO;OACa,MAAM,CA0C1B;IAAD,aAAC;CA1CD,AA0CC,CA1CmC,EAAE,CAAC,SAAS,GA0C/C;kBA1CoB,MAAM","file":"","sourceRoot":"/","sourcesContent":["import Level1 from \"./Level/Level1\";\r\nimport LevelBase from \"./Level/LevelBase\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Player extends cc.Component {\r\n\r\n    pointNode: cc.Node = null\r\n\r\n    gotMeat: boolean = false\r\n\r\n    isMoving: boolean = false\r\n    moveSpeed: number = 1\r\n    pointIndex: number = 0\r\n\r\n    onLoad() {\r\n        this.pointNode = LevelBase.Share.node.getChildByName('PointNode')\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    //吃掉食物\r\n    eatMean() {\r\n        this.gotMeat = true\r\n    }\r\n\r\n    moveToPoint(index: number) {\r\n        return new Promise((rs, rj) => {\r\n            if (this.isMoving) {\r\n                rs()\r\n                return\r\n            }\r\n            this.isMoving = true\r\n            let a1 = cc.moveTo(this.moveSpeed, this.pointNode.children[index].getPosition())\r\n            let a2 = cc.callFunc(() => {\r\n                this.pointIndex = index\r\n                this.isMoving = false\r\n                rs()\r\n            })\r\n            let a3 = cc.sequence(a1, a2)\r\n            this.node.runAction(a3)\r\n        })\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n"]}