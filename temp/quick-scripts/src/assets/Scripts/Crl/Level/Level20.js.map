{"version":3,"sources":["assets\\Scripts\\Crl\\Level\\Level20.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import Utility from \"../../Mod/Utility\";\r\nimport LevelBase from \"./LevelBase\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Level20 extends LevelBase {\r\n\r\n    @property(cc.Node)\r\n    Saw: cc.Node = null\r\n    @property(cc.Node)\r\n    Poison: cc.Node = null\r\n    @property(cc.Node)\r\n    rotateNode: cc.Node = null\r\n\r\n    onEnable() {\r\n        this.sawAction()\r\n        this.schedule(this.updateCB)\r\n    }\r\n\r\n    async updateCB() {\r\n        if (!this.isGameOver) {\r\n            if (Utility.getWorldDis(this.playerNode, this.Saw) <= 100) {\r\n                this.loseCB()\r\n                return\r\n            }\r\n\r\n            for (let i = 0; i < this.Poison.childrenCount; i++) {\r\n                let p = this.Poison.children[i]\r\n                if (Utility.getWorldDis(p, this.playerNode) <= 50) {\r\n                    this.loseCB()\r\n                    return\r\n                }\r\n            }\r\n        }\r\n    }\r\n    sawAction() {\r\n        let a1 = cc.rotateBy(4.6, -960)\r\n\r\n        let a3 = cc.delayTime(0.3)\r\n        let a4 = cc.moveTo(2, cc.v2(0, 85))\r\n        let a5 = cc.delayTime(0.3)\r\n        let a6 = cc.moveTo(2, cc.v2(0, -55))\r\n        let a7 = cc.sequence(a3, a4, a5, a6)\r\n\r\n        let a9 = cc.spawn(a1, a7)\r\n        this.Saw.runAction(cc.repeatForever(a9))\r\n    }\r\n\r\n    async trigger00() {\r\n        if (this.playerCrl.pointIndex == 1) {\r\n            await this.playerCrl.moveToPoint(2)\r\n        }\r\n        this.canTouch = true\r\n    }\r\n    async trigger10() {\r\n        if (this.playerCrl.pointIndex == 2) {\r\n            await this.playerCrl.moveToPoint(3)\r\n            if (this.playerCrl.gotMeat) {\r\n                await this.playerCrl.moveToPoint(4)\r\n            } else {\r\n                this.loseCB()\r\n                return\r\n            }\r\n        }\r\n        this.canTouch = true\r\n    }\r\n    async trigger20() {\r\n        if (this.playerCrl.pointIndex == 0) {\r\n            await this.playerCrl.moveToPoint(3)\r\n            if (this.playerCrl.gotMeat) {\r\n                await this.playerCrl.moveToPoint(4)\r\n            } else {\r\n                this.loseCB()\r\n                return\r\n            }\r\n        }\r\n\r\n        this.canTouch = true\r\n    }\r\n    async trigger30() {\r\n        if (this.playerCrl.pointIndex == 0) {\r\n            await this.playerCrl.moveToPoint(1)\r\n            if (this.getNeedleCrlById(0).switchState > 0) {\r\n                await this.playerCrl.moveToPoint(2)\r\n                if (this.getNeedleCrlById(1).switchState > 0) {\r\n                    await this.playerCrl.moveToPoint(3)\r\n                    if (this.playerCrl.gotMeat) {\r\n                        await this.playerCrl.moveToPoint(4)\r\n                    } else {\r\n                        this.loseCB()\r\n                        return\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this.canTouch = true\r\n    }\r\n}\r\n"]}