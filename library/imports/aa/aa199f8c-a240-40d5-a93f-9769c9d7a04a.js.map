{"version":3,"sources":["assets\\Scripts\\Mod\\SoundMgr.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class SoundMgr extends cc.Component {\r\n\r\n    static Share: SoundMgr = new SoundMgr()\r\n\r\n    currentMusic: string = \"\"\r\n\r\n    static IsMute: boolean = false\r\n\r\n    currentAid: number = -1\r\n\r\n    waitBackgroundMuisc: string = \"\"\r\n\r\n    buttonIns: boolean = false\r\n\r\n    doneCB: Function = null\r\n\r\n    public static MuteSW() {\r\n        cc.audioEngine.stopAll()\r\n        cc.audioEngine.stopMusic()\r\n        SoundMgr.IsMute = !SoundMgr.IsMute\r\n        SoundMgr.Share.node.active = !SoundMgr.IsMute\r\n        if (SoundMgr.IsMute == false) {\r\n            SoundMgr.Share.PlayBackground(SoundMgr.Share.currentMusic == \"\" ? SoundMgr.Share.waitBackgroundMuisc : SoundMgr.Share.currentMusic)\r\n        }\r\n    }\r\n\r\n    public static initAll(cb: Function) {\r\n        // let soundnode: cc.Node = new cc.Node()\r\n        // let crl = soundnode.addComponent(SoundMgr)\r\n        // soundnode.name = \"SoundMgr\"\r\n        // crl.doneCB = cb\r\n        // crl.loadSounds()\r\n        // cc.director.getScene().addChild(soundnode)\r\n        // cc.game.addPersistRootNode(soundnode)\r\n    }\r\n\r\n    loadSounds(cb: Function) {\r\n        this.doneCB = cb\r\n        cc.loader.loadResDir(\"Sound\", cc.AudioClip, (err, sounds) => {\r\n            sounds.forEach((sound) => {\r\n                let clip = new cc.Node()\r\n                let crl = clip.addComponent(cc.AudioSource)\r\n                crl.clip = sound\r\n                clip.name = sound.name\r\n                this.node.addChild(clip)\r\n            })\r\n            this.doneCB()\r\n            cc.log(\"loaded sound:\", sounds.length)\r\n        })\r\n    }\r\n\r\n    public static justMute() {\r\n        SoundMgr.IsMute = true\r\n    }\r\n\r\n    onLoad() {\r\n        cc.game.addPersistRootNode(this.node)\r\n        SoundMgr.Share = this;\r\n    }\r\n\r\n    start() {\r\n        //cc.game.addPersistRootNode(this.node)\r\n    }\r\n\r\n    PlaySound(key: string, loop: boolean = false) {\r\n        if (this.node == null) {\r\n            return null\r\n        }\r\n        if (!SoundMgr.IsMute) {\r\n            let source = this.node.getChildByName(key)\r\n            if (source == null) {\r\n                cc.log(\"can't load sound\", key)\r\n                return null\r\n            }\r\n            return cc.audioEngine.play(this.node.getChildByName(key).getComponent(cc.AudioSource).clip, loop, 1)\r\n        }\r\n    }\r\n\r\n    getMusicClip(key: string) {\r\n        return this.node.getChildByName(key).getComponent(cc.AudioSource).clip\r\n    }\r\n\r\n    PlayMusic(key: string, loop: boolean = false) {\r\n        if (this.node == null) {\r\n            return\r\n        }\r\n        if (!SoundMgr.IsMute) {\r\n            let source = this.node.getChildByName(key)\r\n            if (source == null) {\r\n                cc.log(\"can't load music\", key)\r\n                return\r\n            }\r\n            if (!this.node.getChildByName(key).getComponent(cc.AudioSource).isPlaying) {\r\n                this.node.getChildByName(key).getComponent(cc.AudioSource).loop = loop\r\n                this.node.getChildByName(key).getComponent(cc.AudioSource).play()\r\n            }\r\n            this.currentMusic = key\r\n        }\r\n    }\r\n\r\n    PlayBackground(key: string) {\r\n        if (this.node == null) {\r\n            return\r\n        }\r\n        this.waitBackgroundMuisc = key\r\n        if (SoundMgr.IsMute == false) {\r\n            cc.log(\"playbackground \", key, SoundMgr.IsMute)\r\n            let source = this.node.getChildByName(key)\r\n            if (source == null) {\r\n                cc.log(\"can't load PlayBackground\", key)\r\n                return\r\n            }\r\n\r\n            if (this.currentMusic != \"\") {\r\n                this.StopMuisc(this.currentMusic)\r\n                cc.log(\"stop muisc\", this.currentMusic)\r\n            }\r\n            if (!cc.audioEngine.isMusicPlaying()/* this.node.getChildByName(key).getComponent(cc.AudioSource).isPlaying */) {\r\n                // this.node.getChildByName(key).getComponent(cc.AudioSource).loop = true\r\n                // this.node.getChildByName(key).getComponent(cc.AudioSource).play()\r\n                cc.audioEngine.playMusic(this.node.getChildByName(key).getComponent(cc.AudioSource).clip, true)\r\n            }\r\n            this.currentMusic = key\r\n        }\r\n    }\r\n\r\n    StopMuisc(key: string) {\r\n        if (this.node == null) {\r\n            return\r\n        }\r\n        this.node.getChildByName(key).getComponent(cc.AudioSource).stop()\r\n    }\r\n}\r\n"]}