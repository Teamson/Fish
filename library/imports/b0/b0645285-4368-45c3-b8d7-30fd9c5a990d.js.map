{"version":3,"sources":["assets\\Scripts\\Crl\\Prop\\Meat.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,6CAAwC;AACxC,gDAA2C;AAC3C,oCAA+B;AAEzB,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAA0B,CAAC;AAG5C;IAAkC,wBAAY;IAD9C;QAAA,qEA+DC;QA3DG,aAAO,GAAW,CAAC,CAAA;QAGnB,cAAQ,GAAW,CAAC,CAAA;QAEpB,gBAAU,GAAY,IAAI,CAAA;QAE1B,eAAS,GAAY,KAAK,CAAA;QAC1B,iBAAW,GAAY,KAAK,CAAA;;IAmDhC,CAAC;IAjDG,eAAe;IAEf,oBAAK,GAAL;QACI,IAAI,CAAC,UAAU,GAAG,mBAAS,CAAC,KAAK,CAAC,UAAU,CAAA;IAChD,CAAC;IAED,MAAM;IACN,wBAAS,GAAT;QAAA,iBAYC;QAXG,OAAO,IAAI,OAAO,CAAC,UAAC,EAAE,EAAE,EAAE;YACtB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAA;YACrB,IAAI,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,KAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,KAAI,CAAC,OAAO,CAAC,CAAC,CAAA;YACzD,IAAI,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC;gBACjB,KAAI,CAAC,SAAS,GAAG,KAAK,CAAA;gBACtB,KAAI,CAAC,WAAW,GAAG,IAAI,CAAA;gBACvB,EAAE,EAAE,CAAA;YACR,CAAC,CAAC,CAAA;YACF,IAAI,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,CAAA;YAC5B,KAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAA;QAC3B,CAAC,CAAC,CAAA;IACN,CAAC;IAED,WAAW;IACX,0BAAW,GAAX;QACI,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,IAAI,GAAG,GAAG,iBAAO,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAA;YACzD,IAAI,GAAG,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBAC9B,KAAK;gBACL,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,gBAAM,CAAC,CAAC,OAAO,EAAE,CAAA;gBAC9C,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAA;aACtB;SACJ;IACL,CAAC;IAED,yBAAU,GAAV;QACI,IAAI,mBAAS,CAAC,KAAK,CAAC,KAAK,IAAI,mBAAS,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE;YACxD,IAAI,GAAG,GAAG,iBAAO,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,mBAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;YAC/D,IAAI,GAAG,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBAC9B,KAAK;gBACL,mBAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAA;gBACtD,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAA;gBACnB,mBAAS,CAAC,KAAK,CAAC,MAAM,EAAE,CAAA;aAC3B;SACJ;IACL,CAAC;IAED,qBAAM,GAAN,UAAO,EAAE;QACL,IAAI,CAAC,WAAW,EAAE,CAAA;QAClB,IAAI,CAAC,UAAU,EAAE,CAAA;IACrB,CAAC;IA1DD;QADC,QAAQ;yCACU;IAGnB;QADC,QAAQ;0CACW;IANH,IAAI;QADxB,OAAO;OACa,IAAI,CA8DxB;IAAD,WAAC;CA9DD,AA8DC,CA9DiC,EAAE,CAAC,SAAS,GA8D7C;kBA9DoB,IAAI","file":"","sourceRoot":"/","sourcesContent":["import Utility from \"../../Mod/Utility\";\r\nimport LevelBase from \"../Level/LevelBase\";\r\nimport Player from \"../Player\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Meat extends cc.Component {\r\n\r\n    @property\r\n    moveByY: number = 0\r\n\r\n    @property\r\n    moveTime: number = 1\r\n\r\n    playerNode: cc.Node = null\r\n\r\n    isMoveing: boolean = false\r\n    isTriggered: boolean = false\r\n\r\n    // onLoad () {}\r\n\r\n    start() {\r\n        this.playerNode = LevelBase.Share.playerNode\r\n    }\r\n\r\n    //触发事件\r\n    triggerCB() {\r\n        return new Promise((rs, rj) => {\r\n            this.isMoveing = true\r\n            let a1 = cc.moveBy(this.moveTime, cc.v2(0, this.moveByY))\r\n            let a2 = cc.callFunc(() => {\r\n                this.isMoveing = false\r\n                this.isTriggered = true\r\n                rs()\r\n            })\r\n            let a3 = cc.sequence(a1, a2)\r\n            this.node.runAction(a3)\r\n        })\r\n    }\r\n\r\n    //检测是否碰到美人鱼\r\n    eatByPlayer() {\r\n        if (this.playerNode) {\r\n            let dis = Utility.getWorldDis(this.node, this.playerNode)\r\n            if (dis <= 50 && !this.isMoveing) {\r\n                //被吃掉\r\n                this.playerNode.getComponent(Player).eatMean()\r\n                this.node.destroy()\r\n            }\r\n        }\r\n    }\r\n\r\n    eatBySharp() {\r\n        if (LevelBase.Share.Sharp && LevelBase.Share.Sharp.isValid) {\r\n            let dis = Utility.getWorldDis(this.node, LevelBase.Share.Sharp)\r\n            if (dis <= 50 && !this.isMoveing) {\r\n                //被吃掉\r\n                LevelBase.Share.SharpCrl.aniCrl.playAnimationByName(3)\r\n                this.node.destroy()\r\n                LevelBase.Share.loseCB()\r\n            }\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        this.eatByPlayer()\r\n        this.eatBySharp()\r\n    }\r\n}\r\n"]}