{"version":3,"sources":["assets\\Scripts\\Crl\\Level\\Level17.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import Utility from \"../../Mod/Utility\";\r\nimport SlideNeedle from \"../Prop/SlideNeedle\";\r\nimport LevelBase from \"./LevelBase\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Level17 extends LevelBase {\r\n\r\n    @property(cc.Node)\r\n    pointNode: cc.Node = null\r\n    @property(cc.Node)\r\n    SlideNeedle: cc.Node = null\r\n    SlideNeedleCrl: SlideNeedle = null\r\n\r\n    onEnable() {\r\n        this.schedule(this.updateCB)\r\n        this.SlideNeedleCrl = this.SlideNeedle.getComponent(SlideNeedle)\r\n\r\n        this.SlideNeedleCrl.moveCB = (dty) => { this.SNMoveCB(dty) }\r\n    }\r\n\r\n    async updateCB() {\r\n        for (let i = 0; i < this.pointNode.childrenCount; i++) {\r\n            let p = this.pointNode.children[i]\r\n            if (Utility.getWorldDis(this.playerNode, p) <= 50 && this.playerCrl.pointIndex != i) {\r\n                this.playerCrl.pointIndex = i\r\n                break\r\n            }\r\n        }\r\n        for (let i = 0; i < this.pointNode.childrenCount; i++) {\r\n            let p = this.pointNode.children[i]\r\n            if (Utility.getWorldDis(this.Sharp, p) <= 50 && this.SharpCrl.pointIndex != i) {\r\n                this.SharpCrl.pointIndex = i\r\n                break\r\n            }\r\n        }\r\n\r\n        if (this.SharpCrl.pointIndex == 0 && !this.SlideNeedleCrl.isBottom) {\r\n            this.SlideNeedleCrl.validTouch = false\r\n        } else {\r\n            this.SlideNeedleCrl.validTouch = this.canTouch\r\n        }\r\n    }\r\n\r\n    async SNMoveCB(dty) {\r\n        if (this.playerCrl.pointIndex == 0 || this.playerCrl.pointIndex == 1) {\r\n            this.playerNode.y += dty\r\n            if (this.SharpCrl.pointIndex == 3 && this.getNeedleCrlById(0).switchState > 0 && this.SlideNeedleCrl.isBottom) {\r\n                this.canTouch = false\r\n                await this.SharpCrl.moveToPoint(0)\r\n            }\r\n        }\r\n        if (this.SharpCrl.pointIndex == 0 || this.SharpCrl.pointIndex == 1) {\r\n            this.Sharp.y += dty\r\n\r\n        }\r\n    }\r\n\r\n    async trigger00() {\r\n        if (this.SharpCrl.pointIndex == 3) {\r\n            await this.SharpCrl.moveToPoint(0)\r\n            this.canTouch = true\r\n        } else if (this.SharpCrl.pointIndex == 0) {\r\n            await this.SharpCrl.moveToPoint(3)\r\n            this.canTouch = true\r\n        }\r\n    }\r\n    async trigger10() {\r\n        if (this.SharpCrl.pointIndex == 3) {\r\n            await this.SharpCrl.moveToPoint(4)\r\n            this.canTouch = true\r\n        } else if (this.playerCrl.pointIndex == 3) {\r\n            await this.playerCrl.moveToPoint(4)\r\n            await this.playerCrl.moveToPoint(5)\r\n        } else {\r\n            this.canTouch = true\r\n        }\r\n    }\r\n    async trigger20() {\r\n        if (this.playerCrl.pointIndex == 1) {\r\n            await this.playerCrl.moveToPoint(2)\r\n            await this.playerCrl.moveToPoint(3)\r\n            if (this.getNeedleCrlById(1).switchState > 0) {\r\n                await this.playerCrl.moveToPoint(4)\r\n                await this.playerCrl.moveToPoint(5)\r\n                return\r\n            }\r\n            else if (this.getNeedleCrlById(0).switchState > 0) {\r\n                await this.SharpCrl.moveToPoint(3)\r\n            } else {\r\n                this.canTouch = true\r\n            }\r\n        } else {\r\n            this.canTouch = true\r\n        }\r\n    }\r\n}\r\n"]}