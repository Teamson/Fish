{"version":3,"sources":["assets\\Scripts\\Crl\\Level\\LevelBase.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import PlayerDataMgr from \"../../Libs/PlayerDataMgr\";\r\nimport Utility from \"../../Mod/Utility\";\r\nimport GameLogic from \"../GameLogic\";\r\nimport Player from \"../Player\";\r\nimport Meat from \"../Prop/Meat\";\r\nimport Needle from \"../Prop/Needle\";\r\nimport Sharp from \"../Sharp\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LevelBase extends cc.Component {\r\n    public static Share: LevelBase\r\n\r\n    playerNode: cc.Node = null\r\n    meatNode: cc.Node = null\r\n    playerCrl: Player = null\r\n    meatCrl: Meat = null\r\n    DesNode: cc.Node = null\r\n    levelCrl: any = null\r\n    NeedleNode: cc.Node = null\r\n    Sharp: cc.Node = null\r\n    SharpCrl: Sharp = null\r\n\r\n    WaterSwitch: cc.Node = null\r\n\r\n    canTouch: boolean = true\r\n    isGameOver: boolean = false\r\n    isWin: boolean = false\r\n\r\n    onLoad() {\r\n        LevelBase.Share = this\r\n        this.playerNode = this.node.getChildByName('Player')\r\n        this.meatNode = this.node.getChildByName('Meat')\r\n        this.DesNode = this.node.getChildByName('Des')\r\n        this.playerCrl = this.playerNode.getComponent(Player)\r\n        this.meatCrl = this.meatNode.getComponent(Meat)\r\n        this.levelCrl = this.node.getComponent('Level' + PlayerDataMgr.getPlayerData().grade)\r\n        this.NeedleNode = this.node.getChildByName('NeedleNode')\r\n        this.Sharp = this.node.getChildByName('Sharp')\r\n        if (this.Sharp)\r\n            this.SharpCrl = this.Sharp.getComponent(Sharp)\r\n\r\n        this.WaterSwitch = this.node.getChildByName('WaterSwitch')\r\n    }\r\n\r\n    start() {\r\n        \r\n    }\r\n\r\n    triggerNeedle(index: number, pIndex: number) {\r\n        this.canTouch = false\r\n        this.levelCrl['trigger' + index.toString() + pIndex.toString()]()\r\n    }\r\n\r\n    checkGotDes() {\r\n        if (this.isGameOver) return\r\n        if (Utility.getWorldDis(this.playerNode, this.DesNode) <= 20) {\r\n            if (this.playerCrl.gotMeat) {\r\n                this.winCB()\r\n            } else {\r\n                this.loseCB()\r\n            }\r\n        }\r\n    }\r\n\r\n    winCB() {\r\n        if (this.isGameOver) return\r\n        this.isGameOver = true\r\n        this.isWin = true\r\n        this.playerNode.stopAllActions()\r\n        if (this.Sharp) this.Sharp.stopAllActions()\r\n        this.playerCrl.aniCrl.playAnimationByName(4)\r\n        this.scheduleOnce(() => {\r\n            GameLogic.Share.showFinishUI()\r\n        }, 2)\r\n    }\r\n\r\n    loseCB() {\r\n        if (this.isGameOver) return\r\n        this.isGameOver = true\r\n        this.isWin = false\r\n        this.playerNode.stopAllActions()\r\n        if (this.Sharp) this.Sharp.stopAllActions()\r\n        this.playerCrl.aniCrl.playAnimationByName(2)\r\n        this.scheduleOnce(() => {\r\n            GameLogic.Share.showDefeatUI()\r\n        }, 2)\r\n    }\r\n\r\n    getNeedleCrlById(id: number): Needle {\r\n        return this.NeedleNode.children[id].getComponent(Needle)\r\n    }\r\n\r\n    update(dt) {\r\n        this.checkGotDes()\r\n    }\r\n}\r\n"]}